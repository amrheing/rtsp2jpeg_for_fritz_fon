name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none

      - name: PHP syntax lint
        run: |
          find . -type f -name "*.php" -print0 | xargs -0 -n1 php -l
      - name: Run slice tests
        run: |
          if [ -f tests/test_slicing.php ]; then php tests/test_slicing.php; fi

      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck

      - name: Shell script lint
        run: |
          find . -type f -name "*.sh" -print0 | xargs -0 -n1 shellcheck

      - name: Secret scan (basic)
        run: |
          echo "Scanning for accidental secrets..."
          # Allow RTSP_PASS in .env.example only
          if grep -R "RTSP_PASS" -n . | grep -v ".env.example" | grep -v "ci.yml"; then
            echo "Found RTSP_PASS outside .env.example" && exit 1
          fi
          # Placeholder CHANGE_ME is allowed in examples; warn only
          if grep -R "CHANGE_ME" -n . | grep -v ".env.example" | grep -v "docker-compose.example.yml"; then
            echo "Warning: CHANGE_ME found outside example files (non-fatal)"; fi

      - name: Verify required files present
        run: |
          for f in README.md LICENSE .env.example frame_producer.sh webcam.php deploy/apache/webcam.conf.example deploy/systemd/webcam-frame.service.example; do
            [ -f "$f" ] || (echo "Missing $f" && exit 1)
          done

      - name: Summary
        run: echo "CI checks passed."
      - name: Install gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks_$(uname -s)_$(uname -m).tar.gz -o /tmp/gitleaks.tgz || exit 0
          tar -xzf /tmp/gitleaks.tgz -C /usr/local/bin gitleaks || true
      - name: gitleaks scan
        run: |
          if command -v gitleaks >/dev/null 2>&1; then gitleaks detect --no-git -v || true; fi